(defwidget bar[]
	(centerbox :orientation "h"
		 :space-evenly true
	(workspaces)
	(windowName)
	(tray)
	)
)

(defwindow top_bar
           :monitor 0
           :geometry (geometry :x "0%"
                               :y "5px"
                               :width "99.5%"
                               :height "5px"
                               :anchor "top center")
           :stacking "fg"
           :exclusive true
  (bar)
  )



(defwidget tray []
	(box :class "tray"
	     :orientation "h"
	     :space-evenly false
	     :halign "end"
	(volume)
	(sep)
	(battery)
	(sep)
	(network)
	(sep)
	(time)))
(defwidget sep []
	(box :class "sep"
	     :orientation "h"
	"|"))

(defwidget volume []
	(button :class "volume"
	     :orientation "h"
	     :halign "end"
	     :space-evenly false
		 :onclick "bash ~/.config/eww/scripts/audio_pop"
	vol))

(defwidget time []
	(box :class "time"
	     :orientation "h"
	     :halign "end"
	time))

(defwidget battery []
	(box :class "battery"
	     :orientation "h"
	     :halign "center"
	battery))

(defwidget network []
	(button :class "network"
	     :orientation "h"
	     :halign "center"
		 :onclick "wifi"
		 :timeout "100000"
	network))

(defwidget windowName[]
	(box :class "windowName"
	     :orientation "h"
	     :halign "end"
	     activeWin))

(defpoll battery :interval "2s"
	"battery")

(defpoll network :interval "1s"
	"netwrk")

(defpoll activeWin :interval "1s"
	"activeworkspace")

(defpoll vol :interval "0.5s"
	"vol")

(defpoll time :interval "60s"
	"date '+%H:%M  %b %d, %Y'")

(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")

(defwidget workspaces []
  (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" 
  			:class "workspaces-widget"
    (box :space-evenly false
      (label :text "${workspaces}${current_workspace}" 
	  		:visible false)
      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
            (label :text "${workspace.id}")
            )
          )
        )
      )
    )
  )


(defwindow volrocker 
		:monitor 0
        :geometry (geometry :x "84.6%"
                           :y "7px"
                           :width "15%"
                           :height "8%")
        :stacking "fg"
		(volrock))

(defwidget volrock []
		(box :class "volrock"
	     :orientation "h"
		 :spacing 2
		 :spacing-evenly false
	     (volicon)
		 (volbar)))

(defwidget volbar[] 
		(box :class "volbar"
			 :orientation "h"
			 (scale :class "volscale" 
			   :min 0
           	   :max 151
			   :flipped false
			   :active true
			   :value ewwvol
			   :tooltip "${ewwvol}%"
			   :onchange "wpctl set-volume -l 1.5 @DEFAULT_AUDIO_SINK@ {}%")))

(defwidget volicon[]
	(box :class "volicon"
	     :orientation "h"
	     volicon))

(defpoll volicon :interval "2s"
	"volrock")

(defpoll ewwvol :interval "1s"
	"ewwvol")